{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link,useHistory,useParams}from\"react-router-dom\";import{createCard,readDeck}from\"../utils/api/index.js\";import CardForm from\"./CardForm.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function NewDeck(){const history=useHistory();const{id}=useParams();const[deck,setDeck]=useState();useEffect(()=>{const getAPIData=async()=>{const getData=await readDeck(id);setDeck(getData);};getAPIData();},[]);const initialFormData={name:\"\",description:\"\"};const[formData,setFormData]=useState(initialFormData);const changeHandler=_ref=>{let{target}=_ref;setFormData({...formData,[target.name]:target.value});};async function submitHandler(event){event.preventDefault();await createCard(id,formData);history.push(\"/decks/\".concat(id));}if(!deck)return/*#__PURE__*/_jsx(\"p\",{children:\"loading...\"});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"breadcrumb-item\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"breadcrumb-item\",children:/*#__PURE__*/_jsx(Link,{to:\"/decks/\".concat(id),children:deck.name})}),/*#__PURE__*/_jsx(\"li\",{className:\"breadcrumb-item active\",\"aria-current\":\"page\",children:\"Add Card\"})]})}),/*#__PURE__*/_jsxs(\"h3\",{children:[deck.name,\": Add Card\"]}),/*#__PURE__*/_jsx(CardForm,{submitHandler:submitHandler,formData:formData,setFormData:setFormData})]});}export default NewDeck;","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","useParams","createCard","readDeck","CardForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NewDeck","history","id","deck","setDeck","getAPIData","getData","initialFormData","name","description","formData","setFormData","changeHandler","_ref","target","value","submitHandler","event","preventDefault","push","concat","children","className","to"],"sources":["C:/Users/setha/Thinkful/Qualified/Flashcards/src/Layout/NewCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link, useHistory, useParams } from \"react-router-dom\"\r\nimport { createCard, readDeck } from \"../utils/api/index.js\"\r\nimport CardForm from \"./CardForm.js\"\r\n\r\nfunction NewDeck() {\r\n\r\n    const history = useHistory();\r\n\r\n    const { id } = useParams();\r\n\r\n    const [deck, setDeck] = useState();\r\n\r\n    useEffect(() => {\r\n        const getAPIData = async () => {\r\n            const getData = await readDeck(id);\r\n            setDeck(getData);\r\n        }\r\n        getAPIData();\r\n    }, [])\r\n\r\n\r\n    const initialFormData = {\r\n        name: \"\",\r\n        description: \"\"\r\n    }\r\n    const [formData, setFormData] = useState(initialFormData);\r\n\r\n    const changeHandler = ({ target }) => {\r\n        setFormData({\r\n            ...formData,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    \r\n    async function submitHandler (event) {\r\n        event.preventDefault()\r\n        await createCard(id, formData)\r\n        history.push(`/decks/${id}`)\r\n    }\r\n\r\n    if (!deck) return <p>loading...</p>\r\n\r\n    return (\r\n        <>\r\n            <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                <li className=\"breadcrumb-item\"><Link to={`/decks/${ id }`}>{ deck.name }</Link></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Card</li>\r\n            </ol>\r\n            </nav>\r\n            <h3>{ deck.name }: Add Card</h3>\r\n            <CardForm submitHandler={ submitHandler } formData={ formData } setFormData={ setFormData }/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default NewDeck;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,UAAU,CAAEC,SAAS,KAAQ,kBAAkB,CAC9D,OAASC,UAAU,CAAEC,QAAQ,KAAQ,uBAAuB,CAC5D,MAAO,CAAAC,QAAQ,KAAM,eAAe,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEpC,QAAS,CAAAC,OAAOA,CAAA,CAAG,CAEf,KAAM,CAAAC,OAAO,CAAGZ,UAAU,CAAC,CAAC,CAE5B,KAAM,CAAEa,EAAG,CAAC,CAAGZ,SAAS,CAAC,CAAC,CAE1B,KAAM,CAACa,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CAElCC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAkB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAd,QAAQ,CAACU,EAAE,CAAC,CAClCE,OAAO,CAACE,OAAO,CAAC,CACpB,CAAC,CACDD,UAAU,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAGN,KAAM,CAAAE,eAAe,CAAG,CACpBC,IAAI,CAAE,EAAE,CACRC,WAAW,CAAE,EACjB,CAAC,CACD,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAACqB,eAAe,CAAC,CAEzD,KAAM,CAAAK,aAAa,CAAGC,IAAA,EAAgB,IAAf,CAAEC,MAAO,CAAC,CAAAD,IAAA,CAC7BF,WAAW,CAAC,CACR,GAAGD,QAAQ,CACX,CAACI,MAAM,CAACN,IAAI,EAAGM,MAAM,CAACC,KAC1B,CAAC,CAAC,CACN,CAAC,CAED,cAAe,CAAAC,aAAaA,CAAEC,KAAK,CAAE,CACjCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAA3B,UAAU,CAACW,EAAE,CAAEQ,QAAQ,CAAC,CAC9BT,OAAO,CAACkB,IAAI,WAAAC,MAAA,CAAWlB,EAAE,CAAE,CAAC,CAChC,CAEA,GAAI,CAACC,IAAI,CAAE,mBAAOR,IAAA,MAAA0B,QAAA,CAAG,YAAU,CAAG,CAAC,CAEnC,mBACIxB,KAAA,CAAAE,SAAA,EAAAsB,QAAA,eACI1B,IAAA,QAAK,aAAW,YAAY,CAAA0B,QAAA,cAC5BxB,KAAA,OAAIyB,SAAS,CAAC,YAAY,CAAAD,QAAA,eACtB1B,IAAA,OAAI2B,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAAC1B,IAAA,CAACP,IAAI,EAACmC,EAAE,CAAC,GAAG,CAAAF,QAAA,CAAC,MAAI,CAAM,CAAC,CAAI,CAAC,cAC7D1B,IAAA,OAAI2B,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAAC1B,IAAA,CAACP,IAAI,EAACmC,EAAE,WAAAH,MAAA,CAAalB,EAAE,CAAI,CAAAmB,QAAA,CAAGlB,IAAI,CAACK,IAAI,CAAQ,CAAC,CAAI,CAAC,cACrFb,IAAA,OAAI2B,SAAS,CAAC,wBAAwB,CAAC,eAAa,MAAM,CAAAD,QAAA,CAAC,UAAQ,CAAI,CAAC,EACxE,CAAC,CACA,CAAC,cACNxB,KAAA,OAAAwB,QAAA,EAAMlB,IAAI,CAACK,IAAI,CAAE,YAAU,EAAI,CAAC,cAChCb,IAAA,CAACF,QAAQ,EAACuB,aAAa,CAAGA,aAAe,CAACN,QAAQ,CAAGA,QAAU,CAACC,WAAW,CAAGA,WAAa,CAAC,CAAC,EAC/F,CAAC,CAGX,CAEA,cAAe,CAAAX,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}