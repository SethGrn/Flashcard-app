{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\setha\\\\Thinkful\\\\Qualified\\\\Flashcards\\\\src\\\\Layout\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport DeckView from \"./DeckView.js\";\nimport NewDeck from \"./NewDeck\";\nimport { listDecks, deleteDeck } from \"../utils/api/index.js\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Main({\n  decks,\n  setDecks\n}) {\n  _s();\n  const history = useHistory();\n  const [test, setTest] = useState();\n  useEffect(() => {\n    const getAPIData = async () => {\n      const getData = await listDecks();\n      setDecks(getData);\n    };\n    getAPIData();\n  }, [test]);\n  const mappedList = decks.map(deck => {\n    function deleteHandler() {\n      if (window.confirm(\"Delete this deck? You will not be able to recover it\")) {\n        deleteDeck(deck.id);\n        setTest(deck.id);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(DeckView, {\n      deck: deck,\n      deleteHandler: deleteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push(\"/decks/new\"),\n      type: \"button\",\n      className: \"btn btn-secondary btn-lg\",\n      children: \"+ Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), mappedList, /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/new\",\n        children: /*#__PURE__*/_jsxDEV(NewDeck, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"P6bMVN1Np5J/iztRhJ1ZaAHazrg=\", false, function () {\n  return [useHistory];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","Switch","Route","DeckView","NewDeck","listDecks","deleteDeck","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","decks","setDecks","_s","history","test","setTest","getAPIData","getData","mappedList","map","deck","deleteHandler","window","confirm","id","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","push","type","className","path","_c","$RefreshReg$"],"sources":["C:/Users/setha/Thinkful/Qualified/Flashcards/src/Layout/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport DeckView from \"./DeckView.js\"\r\nimport NewDeck from \"./NewDeck\"\r\nimport { listDecks, deleteDeck } from \"../utils/api/index.js\"\r\nimport \"./Main.css\"\r\n\r\nfunction Main ({ decks, setDecks }) {\r\n\r\n    const history = useHistory();\r\n    const [test, setTest] = useState();\r\n\r\n    useEffect(() => {\r\n        const getAPIData = async () => {\r\n            const getData = await listDecks();\r\n            setDecks(getData);\r\n        }\r\n        getAPIData();\r\n    }, [test])\r\n\r\n    const mappedList = decks.map((deck) => {\r\n        function deleteHandler() {\r\n            if(window.confirm(\"Delete this deck? You will not be able to recover it\")) {\r\n                deleteDeck(deck.id)\r\n                setTest(deck.id);\r\n            }\r\n        }\r\n        return <DeckView deck={deck} deleteHandler={deleteHandler} />\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => history.push(\"/decks/new\")} type=\"button\" className=\"btn btn-secondary btn-lg\">+ Create Deck</button>\r\n            {mappedList}\r\n            <Switch>\r\n                <Route path=\"/decks/new\">\r\n                    <NewDeck />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,UAAU,QAAQ,uBAAuB;AAC7D,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,IAAIA,CAAE;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAEhC,MAAMC,OAAO,GAAGf,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAElCC,SAAS,CAAC,MAAM;IACZ,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,OAAO,GAAG,MAAMd,SAAS,CAAC,CAAC;MACjCQ,QAAQ,CAACM,OAAO,CAAC;IACrB,CAAC;IACDD,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,MAAMI,UAAU,GAAGR,KAAK,CAACS,GAAG,CAAEC,IAAI,IAAK;IACnC,SAASC,aAAaA,CAAA,EAAG;MACrB,IAAGC,MAAM,CAACC,OAAO,CAAC,sDAAsD,CAAC,EAAE;QACvEnB,UAAU,CAACgB,IAAI,CAACI,EAAE,CAAC;QACnBT,OAAO,CAACK,IAAI,CAACI,EAAE,CAAC;MACpB;IACJ;IACA,oBAAOlB,OAAA,CAACL,QAAQ;MAACmB,IAAI,EAAEA,IAAK;MAACC,aAAa,EAAEA;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjE,CAAC,CAAC;EAEF,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACIvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMjB,OAAO,CAACkB,IAAI,CAAC,YAAY,CAAE;MAACC,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAC,0BAA0B;MAAAJ,QAAA,EAAC;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3HV,UAAU,eACXZ,OAAA,CAACP,MAAM;MAAA8B,QAAA,eACHvB,OAAA,CAACN,KAAK;QAACkC,IAAI,EAAC,YAAY;QAAAL,QAAA,eACpBvB,OAAA,CAACJ,OAAO;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA,eACX,CAAC;AAEX;AAAChB,EAAA,CAlCQH,IAAI;EAAA,QAEOX,UAAU;AAAA;AAAAqC,EAAA,GAFrB1B,IAAI;AAoCb,eAAeA,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}